version: "3.9"

secrets:
  postgres_password:
    file: ./config/postgres/password.env

services:

  nginx:
    image: nginx:1.21.4-alpine
    container_name: nginx
    profiles: ["release"]
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 1102:1102

  customers:
    image: delineateio/customers:latest
    profiles: ["release"]
    expose:
      - 1102
    deploy:
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 5
        window: 60s
    environment:
      - CONSUL_HTTP_ADDR=consul-server:8500
    depends_on:
      - consul-client
      - consul-server
      - db

# consul ----------------------------------------------------------------------------

  consul-server:
    image: consul:1.10.3
    container_name: consul-server
    hostname: consul-server
    restart: always
    volumes:
      - ./config/consul/server.json:/consul/config/server.json:ro
      - ../../certs/:/consul/config/certs/:ro
    ports:
      - 8500:8500
      - 8600:8600/tcp
      - 8600:8600/udp
    command: 'agent -bootstrap-expect=1'

  consul-client:
    image: consul:1.10.3
    container_name: consul-client
    restart: always
    depends_on:
      - consul-server
    volumes:
      - ./config/consul/client.json:/consul/config/client.json:ro
      - ../../certs/:/consul/config/certs/:ro
    command: 'agent'

# postgres --------------------------------------------------------------------------

  db:
    image: postgres:11.13-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: ${PG_DATABASE:-postgres}
      POSTGRES_USER: ${PG_USER:-postgres}
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    secrets:
      - postgres_password
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${PG_USER:-postgres}"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure
    stdin_open: true
    tty: true
    ports:
      - 5432:5432
